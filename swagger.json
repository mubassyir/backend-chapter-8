{
  "swagger": "2.0",
  "info": {
    "description": "Game Database Documentation.",
    "version": "1.0.0",
    "title": "Stone Scissors Paper Games"
  },
  "host": "127.0.0.1:8080",
  "basePath": "/api",
  "tags": [
    {
      "name": "user",
      "description": "management account"
    },
    {
      "name": "biodata",
      "description": "Detail information about user"
    },
    {
      "name": "history",
      "description": "Recent Information about game history"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/user/signUp": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Add a new user",
        "description": "create new account",
        "operationId": "signUpGame",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Account created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/signUp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success create new user."
          },
          "404": {
            "description": "email and password required"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user/signIn": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "login with registered account",
        "description": "login with registered account",
        "operationId": "signUpUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "SignUp user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/signIn"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "signIn success"
          },
          "400": {
            "description": "email and password required"
          },
          "401": {
            "description": "data not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "retrive all account",
        "description": "retrive all account",
        "operationId": "getUserAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Tokens",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retrive all data success"
          },
          "400": {
            "description": "email and password required"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    },
    "/user/{user_id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "find account by id",
        "description": "find account by id",
        "operationId": "getUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "description": "primary key of account",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Tokens",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "query with id success"
          },
          "400": {
            "description": "email and password required"
          },
          "500": {
            "description": "server error"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "update account by id",
        "description": "update account by id",
        "operationId": "updateUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "description": "ID of user_game to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Tokens",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "updating account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updating data success"
          },
          "400": {
            "description": "Email and password required"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user account by id",
        "description": "Delete user account by id",
        "operationId": "deleteUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "description": "ID of user_game to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Tokens",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull deleting data"
          },
          "400": {
            "description": "email and password required"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    },
    "/biodata": {
      "post": {
        "tags": [
          "biodata"
        ],
        "summary": "Add detail information about user",
        "description": "Add detail information about user",
        "operationId": "createBiodata",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Bio Created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/biodataAdd"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Tokens",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success create new biodata"
          },
          "400": {
            "description": "field required"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "tags": [
          "biodata"
        ],
        "summary": "retrive all biodata",
        "description": "retrive all account",
        "operationId": "getBioAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Tokens",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retrivinga all biodata success"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    },
    "/biodata/{user_id}": {
      "get": {
        "tags": [
          "biodata"
        ],
        "summary": "find bidata by id",
        "description": "find biodata by id",
        "operationId": "getBiodata",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "description": "foreign Key from user table",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Tokens",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "query with id success"
          },
          "500": {
            "description": "server error"
          }
        }
      },
      "put": {
        "tags": [
          "biodata"
        ],
        "summary": "update biodata by id",
        "description": "update biodata by id",
        "operationId": "updateBio",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "description": "foreign key",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Tokens",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "updating data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/biodataUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updating data success"
          },
          "400": {
            "description": "field required"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "biodata"
        ],
        "summary": "Delete information by id",
        "description": "Delete information by id",
        "operationId": "deleteBio",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "description": "foreign key",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Tokens",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull deleting data"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    },
    "/history": {
      "post": {
        "tags": [
          "history"
        ],
        "summary": "add information about game result",
        "description": "add information about game result",
        "operationId": "createHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "History Created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/historyAdd"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Tokens",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success create new biodata"
          },
          "400": {
            "description": "field required"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "tags": [
          "history"
        ],
        "summary": "retrive all history",
        "description": "retrive all history",
        "operationId": "getHistoryAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Tokens",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retrivinga all biodata success"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    },
    "/history/{user_id}": {
      "get": {
        "tags": [
          "history"
        ],
        "summary": "find game result by id",
        "description": "find result by id",
        "operationId": "getHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "description": "foreign Key",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Tokens",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "query with id success"
          },
          "500": {
            "description": "server error"
          }
        }
      },
      "put": {
        "tags": [
          "history"
        ],
        "summary": "update history by id",
        "description": "update history by id",
        "operationId": "updateHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "description": "foreign key",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Tokens",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "updating data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/historyUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updating data success"
          },
          "400": {
            "description": "field required"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "history"
        ],
        "summary": "Delete game result by id",
        "description": "Delete game result by id",
        "operationId": "deleteHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "description": "foreign key",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Tokens",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull deleting data"
          },
          "400": {
            "description": "request not available"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "definitions": {
    "signUp": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "signIn": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "userUpdate": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "biodataAdd": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        }
      }
    },
    "biodataUpdate": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        }
      }
    },
    
    "historyAdd": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer"
        },
        "result": {
          "type": "string"
        }
      }
    },
    "historyUpdate": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string"
        }
      }
    }
  }
}